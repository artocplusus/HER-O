#include <iostream>
#include <ctime>
#include "Header.h"
#include <conio.h>
#include "audiere.h"
#include "windows.h"
#include <stdlib.h>
#pragma warning(disable : 4996)

using namespace audiere;
using namespace std;

int main()
{
	srand(time(0));
	AudioDevicePtr device = OpenDevice();
	OutputStreamPtr sound = OpenSound(device, "My_New_Song_1_1.wav", false);
	OutputStreamPtr sound1 = OpenSound(device, "6717309660561408.wav", false);
	char exit = '1';
	int nmHp;
	int nmDamage;
	int sleepTime;
	int plrDamage;
	int spellDamage;
	int plrHp;
	int critChance;
	int critDamage;
	int currentNmHp;
	int currentPlrHp;
	int randSleep;
	int kills;
	float volume;
	char attackButton = 'z';
	char dodgeButton = 'x';
	char spellButton = 'c';
	char press;
	int* spellCharge = new int[4];
	int chargeNum;
	int* tops = new int[5] {0, 0, 0, 0, 0};
	while (exit ==  '1')
	{
		kills = 0;
		for (int i = 0; i < 4; i++)
		{
			spellCharge[i] = 0;
		}
		nmHp = 10;
		nmDamage = 4;
		sleepTime = 1215;
		plrDamage = 5;
		spellDamage = 25;
		plrHp = 20;
		currentPlrHp = 20;
		critChance = 0;
		critDamage = 50;
		chargeNum = 0;
		sound1->stop();
		sound1 = OpenSound(device, "6717309660561408.wav", false);
		mainMenu(&volume, &attackButton, &dodgeButton, &spellButton);
		sound->setVolume(volume);
		sound1->setVolume(volume);
		sound1->setRepeat(true);
		sound1->play();
		Sleep(3200);
		system("cls");
		sound1->stop();
		sound1 = OpenSound(device, "6717309660561408.wav", false);
		sound1->setVolume(volume);
		newEnemy(&nmHp, &nmDamage, &sleepTime, &currentNmHp);
		sound->setRepeat(true);
		sound->play();
		spellCharge[chargeNum] = 1;
		if (chargeNum != 3)
			chargeNum++;
		cout << "________________________________________________________________________________________________________________________";
		cout << "________________________________________________________________________________________________________________________";
		cout << "                                                          " << currentNmHp << "/" << nmHp << "HP" << endl;
		cout << "                                                          H H H H" << endl;
		cout << "                                                          H H H H" << endl;
		cout << "                                                          H H H H" << endl;
		cout << "                                                          H H H H" << endl;
		cout << "                                                           |\n\n\n\n\n\n\n\n\n\n\n\n\n\n";
		cout << "                                                               |" << endl;
		cout << "                                                          O O O O" << endl;
		cout << "                                                          O O O O" << endl;
		cout << "                                                          O O O O" << endl;
		cout << "                                                          O O O O" << endl;
		cout << "SPELL CHARGE:"<<spellCharge[0] << spellCharge[1] << spellCharge[2] << spellCharge[3] << "                                         " << currentPlrHp << "/" << plrHp << "HP" << endl;
		cout << "________________________________________________________________________________________________________________________";
		cout << "________________________________________________________________________________________________________________________";
		while (true)
		{
			randSleep = rand() % 1001 + 500;
			Sleep(randSleep);
			system("cls");
			enemyAttack(nmDamage, &currentPlrHp, sleepTime, dodgeButton, currentNmHp, nmHp, plrHp, spellCharge);
			if(currentPlrHp > 0)
			{
				press = '~';
				while (press != attackButton && press != spellButton)
				{
					press = getch();
				}
				if (press == spellButton && spellCharge[3] == 1)
					spell(spellDamage, &currentNmHp, nmHp, plrHp, currentPlrHp, spellCharge, &chargeNum);
				else
					playerAttack(plrDamage, critChance, critDamage, &currentNmHp, nmHp, plrHp, currentPlrHp, spellCharge);
				spellCharge[chargeNum] = 1;
				if (chargeNum != 3)
					chargeNum++;
				if (!(currentNmHp > 0))
				{
					kills++;
					sound->stop();
					sound = OpenSound(device, "My_New_Song_1_1.wav", false);
					sound->setVolume(volume);
					sound1->setRepeat(true);
					sound1->play();
					system("cls");
					reward(&plrHp, &plrDamage, &critChance, &critDamage, &currentPlrHp, &spellDamage);
					sound1->stop();
					sound1 = OpenSound(device, "6717309660561408.wav", false);
					sound1->setVolume(volume);
					newEnemy(&nmHp, &nmDamage, &sleepTime, &currentNmHp);
					cout << "________________________________________________________________________________________________________________________";
					cout << "________________________________________________________________________________________________________________________";
					cout << "                                                          " << currentNmHp << "/" << nmHp << "HP" << endl;
					cout << "                                                          H H H H" << endl;
					cout << "                                                          H H H H" << endl;
					cout << "                                                          H H H H" << endl;
					cout << "                                                          H H H H" << endl;
					cout << "                                                           |\n\n\n\n\n\n\n\n\n\n\n\n\n\n";
					cout << "                                                               |" << endl;
					cout << "                                                          O O O O" << endl;
					cout << "                                                          O O O O" << endl;
					cout << "                                                          O O O O" << endl;
					cout << "                                                          O O O O" << endl;
					cout << "SPELL CHARGE:" << spellCharge[0] << spellCharge[1] << spellCharge[2] << spellCharge[3] << "                                         " << currentPlrHp << "/" << plrHp << "HP" << endl;
					cout << "________________________________________________________________________________________________________________________";
					cout << "________________________________________________________________________________________________________________________";
					sound->setRepeat(true);
					sound->play();
				}
			}
			else
				break;
		}
		system("cls");
		sound->stop();
		sound = OpenSound(device, "My_New_Song_1_1.wav", false);
		sound1->setRepeat(true);
		sound1->play();
		GameOver(kills, tops, &exit);
	}
	return 0;
}
